{"version":3,"file":"viteStatic/js/47.8cbf8c706.chunk.js","mappings":"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","sources":["webpack://vitesandbox-client/./node_modules/image-size/lib/types/ sync ^\\.\\/.*$","webpack://vitesandbox-client/./node_modules/less/lib/less-node/ sync","webpack://vitesandbox-client/./node_modules/vite/dist/browser/ sync","webpack://vitesandbox-client/./src/utils/polyfill/esbuild.js","webpack://vitesandbox-client/./src/utils/polyfill/fs.js","webpack://vitesandbox-client/./src/utils/polyfill/global.js","webpack://vitesandbox-client/./src/utils/polyfill/module.js","webpack://vitesandbox-client/./src/utils/polyfill/perfHooks.js","webpack://vitesandbox-client/./src/utils/polyfill/url.js","webpack://vitesandbox-client/./src/utils/index.js","webpack://vitesandbox-client/./src/utils/initFiles/index.js","webpack://vitesandbox-client/./src/vite/plugins/viteClientPlugin.js","webpack://vitesandbox-client/./src/vite/plugins/nodeResolvePlugin.js","webpack://vitesandbox-client/./src/vite/plugins/htmlPlugin.js","webpack://vitesandbox-client/./src/vite/optimize.js","webpack://vitesandbox-client/./src/vite/plugins/tsxPlugin.js","webpack://vitesandbox-client/./src/vite/server.js","webpack://vitesandbox-client/./src/vite/index.js","webpack://vitesandbox-client/./src/utils/channel.js"],"sourcesContent":["var map = {\n\t\"./bmp\": 46084,\n\t\"./bmp.js\": 46084,\n\t\"./dds\": 74344,\n\t\"./dds.js\": 74344,\n\t\"./gif\": 16727,\n\t\"./gif.js\": 16727,\n\t\"./jpg\": 76129,\n\t\"./jpg.js\": 76129,\n\t\"./png\": 27963,\n\t\"./png.js\": 27963,\n\t\"./psd\": 57085,\n\t\"./psd.js\": 57085,\n\t\"./svg\": 11445,\n\t\"./svg.js\": 11445,\n\t\"./tiff\": 35371,\n\t\"./tiff.js\": 35371,\n\t\"./webp\": 10288,\n\t\"./webp.js\": 10288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19015;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 77027;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 1802;\nmodule.exports = webpackEmptyContext;","import * as esbuild from 'esbuild-wasm';\n\nlet initializePromise;\n\nfunction initialize() {\n  if (!initializePromise) {\n    initializePromise = esbuild.initialize({\n      worker: typeof Worker != 'undefined',\n      wasmURL: 'https://www.unpkg.com/esbuild-wasm@0.14.47/esbuild.wasm' // todo: version\n    });\n  }\n  return initializePromise;\n}\n\nfunction build(e) {\n  return initialize().then(() => esbuild.build(e));\n}\n\nfunction transform(e, r) {\n  return initialize().then(() => esbuild.transform(e, r));\n}\n\nfunction formatMessages(e, r) {\n  return initialize().then(() => esbuild.formatMessages(e, r));\n}\n\nfunction startService() {\n  return initialize().then(() => ({\n    transform: esbuild.transform,\n    build: esbuild.build\n  }));\n}\n\nexport {\n  build,\n  transform,\n  formatMessages,\n  startService\n};\n","import { fs } from 'memfs';\n\nexport const promises = fs.promises;\n\nexport default fs;\n","export default {};\n","const builtinModules = [\n  'assert',\n  'async_hooks',\n  'buffer',\n  'child_process',\n  'cluster',\n  'console',\n  'constants',\n  'crypto',\n  'dgram',\n  'dns',\n  'domain',\n  'events',\n  'fs',\n  'http',\n  'http2',\n  'https',\n  'inspector',\n  'module',\n  'net',\n  'os',\n  'path',\n  'perf_hooks',\n  'process',\n  'punycode',\n  'querystring',\n  'readline',\n  'repl',\n  'stream',\n  'string_decoder',\n  'timers',\n  'tls',\n  'trace_events',\n  'tty',\n  'url',\n  'util',\n  'v8',\n  'vm',\n  'wasi',\n  'worker_threads',\n  'zlib'\n];\n\nconst createRequire = () => {};\n\nexport {\n  builtinModules,\n  createRequire\n};\n","const performance = {\n  now: () => new Date().getTime()\n};\n\nexport {\n  performance\n};\n","import { parse } from 'node-url';\n\n// npm install --save node-url@npm:url\n\nconst URL = globalThis.URL;\nconst URLSearchParams = globalThis.URLSearchParams;\n\nfunction pathToFileURL(path) {\n  return new URL(path, 'file://');\n}\n\nfunction fileURLToPath(url) {\n  if (url.protocol === 'file:') {\n    return url.pathname;\n  }\n\n  throw new Error(`fileURLToPath(${url})`);\n}\n\nexport {\n  URL,\n  URLSearchParams,\n  parse,\n  pathToFileURL,\n  fileURLToPath\n};\n\n","import fs from 'fs';\nimport path from 'path';\n\nconst packageJsonPath = '/package.json';\n\nconst sandboxConfigJsonPath = '/sandbox.config.json';\n\nconst depBaseUrl = 'https://esm.sh';\n\n// 'react@16.8.0/cjs/react.development.js' -> \n// ['react/cjs/react.development.js', 'react', '16.8.0', '/cjs/react.development.js', ...]\nconst dependencyNameRE = /^((?:@[^/A-Z:]+\\/)?[^@/._A-Z:~)('!*][^@/A-Z:~)('!*]*)(?:@(.+?))?(\\/[^\\\\/].*?)?$/;\n\nconst configFileNames = ['tsconfig.json', 'jsconfig.json'];\n\nconst externalDependencies = ['react', 'react-dom'];\n\nconst setDomainCode = `\n  try {\n    // 修改 domain，以便让外部页面和 iframe 页面在同一个域名下，主要目的是为了直接监听 iframe 页面的事件 xxx\n    document.domain = window.location.hostname.split('.').slice(-2).join('.');\n  } catch (error) {\n    //\n  }\n`;\n\nfunction genImportMap(deps) {\n  const importMap = {\n    imports: {}\n  };\n  for (const depName of externalDependencies) {\n    const version = deps[depName];\n    if (version) {\n      importMap.imports[depName] = `${depBaseUrl}/${depName}@${version}?dev&bundle&external=${externalDependencies.join(',')}`;\n    } else {\n      importMap.imports[depName] = `${depBaseUrl}/${depName}@latest?dev&bundle&external=${externalDependencies.join(',')}`;\n    }\n  }\n\n  return JSON.stringify(importMap);\n}\n\nfunction writeFileSync(_path, contents) {\n  try {\n    fs.mkdirSync(path.dirname(_path), { recursive: true});\n    fs.writeFileSync(_path, contents);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction genSandboxConfigJson(tree) {\n  if (!(sandboxConfigJsonPath in tree)) {\n    return {\n      sandboxConfigJson: {}\n    };\n  }\n\n  try {\n    return {\n      sandboxConfigJson: JSON.parse(tree[sandboxConfigJsonPath])\n    };\n  } catch (error) {\n    tree[sandboxConfigJsonPath] = '{}';\n    error.message = `Parsing ${sandboxConfigJsonPath}: ${error.message}`;\n    return {\n      sandboxConfigJson: {},\n      parseError: error\n    };\n  }\n}\n\nfunction genPkgJson(tree) {\n  if (!(packageJsonPath in tree)) {\n    return {\n      pkgJson: {}\n    };\n  }\n\n  try {\n    return {\n      pkgJson: JSON.parse(tree[packageJsonPath])\n    };\n  } catch (error) {\n    tree[packageJsonPath] = '{}';\n    error.message = `Parsing ${packageJsonPath}: ${error.message}`;\n    return {\n      pkgJson: {},\n      parseError: error\n    };\n  }\n}\n\n// 基于 package.json 的 dependencies 初始化 deps 对象\nfunction initDeps(tree, deps) {\n  if (packageJsonPath in tree) {\n    const { dependencies } = JSON.parse(tree[packageJsonPath]);\n\n    Object.entries(dependencies || []).forEach(([name, version]) => {\n      const ver = deps[name];\n      if (ver) {\n        if (version !== ver) {\n          console.log(`Already pinned dependency: ${name}@${ver} (${version} requested, ignored)`);\n        }\n      } else {\n        deps[name] = version;\n      }\n    });\n  }\n}\n\nfunction writeProjectFiles(root, tree) { \n  for (const [filename, code] of Object.entries(tree)) {\n    writeFileSync(path.join(root, filename), code);\n  }\n}\n \nfunction genProjectInfo(tree, pkgJson, wcid) {\n  const { dependencies = {}, devDependencies = {}, peerDependencies = {} } = pkgJson;\n  const isSomeFrameWork = name => name in dependencies || name in devDependencies || name in peerDependencies;\n\n  return {\n    useReact: isSomeFrameWork('react'),\n    useSolid: isSomeFrameWork('solid-js'),\n    useVue: isSomeFrameWork('vue'),\n    useSvelte: isSomeFrameWork('svelte'),\n    useStencil: isSomeFrameWork('@stencil/core'),\n    dependencies,\n    devDependencies,\n    peerDependencies,\n    root: `/@root/${wcid}`,\n    configFiles: Object.fromEntries(configFileNames.map(configFileName => [configFileName, tree[configFileName]]))\n  };\n}\n\nfunction sendCompileError(channel, err, wcid) {\n  const error = Array.isArray(err) ? err : [err];\n  channel.publish('compile-error', {\n    wcid,\n    errors: error.map(e => ({\n      stack: e.stack,\n      message: e.message,\n      filename: e.filename,\n      lineno: e.start && e.start.line,\n      colno: e.start && e.start.column\n    }))\n  });\n}\n\nfunction getImageContentType(pathname) {\n  const extname = path.extname(pathname).slice(1);\n  switch (extname) {\n  case 'svg':\n    return 'image/svg+xml';\n  case 'jpeg':\n  case 'jpg':\n    return 'image/jpeg';\n  default:\n    return `image/${extname}`;\n  }\n}\n\nfunction _findPathName(pathNameArr, pathname) {\n  const i = new RegExp(`^${pathname}\\\\.(mdx?|html?|astro|njk)$`);\n  return pathNameArr.find(p => i.test(p));\n}\n\nfunction findPathName(pathname, pathNameArr) {\n  if (pathNameArr.includes(pathname)) {\n    return pathname;\n  }\n  if (pathname === '' || pathname.endsWith('/')) {\n    _findPathName(pathNameArr, `${pathname}index`);\n  }\n  if (!(new RegExp('\\\\.(mdx?|html?|astro|njk)$').test(pathname))) {\n    return _findPathName(pathNameArr, pathname);\n  }\n}\n\nfunction genErrorHtmlCode(channel, contentType, error, wcid) {\n  let code = `\n  import(/*@vite-ignore*/ '/${channel.channelName}/vite/${wcid}/@vite/client').then(({ handleMessage }) => handleMessage({\n      type: 'error',\n      err: ${JSON.stringify(error)},\n  }));\n  `;\n\n  if (contentType === 'text/html') {\n    code = `<!DOCTYPE html><html><head><script type='module'>${code}</script></head><body></body></html>`;\n  }\n  return code;\n}\n\nfunction enhanceErrorInfo(error, tree, path, pathname) {\n  if (error.plugin === 'vite:import-analysis') {\n    const [ , importer, source] = error.message?.match(/Failed to resolve import '([^']+)' from '([^']+)'/) || [];\n    const [ , dependency] = importer?.match(/^((?:@[^/A-Z:]+\\/)?[^@/._A-Z:~)('!*][^@/A-Z:~)('!*]*)(?:@(.+?))?(\\/[^\\\\/].*?)?$/) || [];\n    if (dependency) {\n      error.message = `Missing dependency '${dependency}' imported from '${source}'`;\n    }\n  } else if (!error.id) {\n    if (pathname && tree[pathname]) {\n      error.id = `/${pathname}`;\n    } else {\n      error.message = `Error processing ${pathname} ${error?.message}`;\n    }\n  }\n}\n\nexport {\n  dependencyNameRE,\n  depBaseUrl,\n  configFileNames,\n  externalDependencies,\n  setDomainCode,\n  genImportMap,\n  writeFileSync,\n  genSandboxConfigJson,\n  initDeps,\n  writeProjectFiles,\n  genProjectInfo,\n  sendCompileError,\n  getImageContentType,\n  findPathName,\n  genPkgJson,\n  genErrorHtmlCode,\n  enhanceErrorInfo\n};\n","import { writeFileSync } from '$utils';\nimport ReactRefreshRuntime from './reactRefreshRuntimeCode.js?raw';\n\nfunction initFiles() {\n  writeFileSync('/node_modules/react-refresh/cjs/react-refresh-runtime.development.js', ReactRefreshRuntime);\n}\n\n// 写入部分文件到内存文件系统\ninitFiles();\n","import { CLIENT_ENTRY, CLIENT_DIR, ENV_ENTRY } from 'vite';\nimport vite_client from './client.js?raw';\nimport vite_client_env from 'vite/dist/client/env.mjs?raw';\n\nconst viteClientPlugin = () => ({\n  name: 'vite:browser:hmr',\n  enforce: 'pre',\n  resolveId(id) {\n    if (id.startsWith(CLIENT_DIR)) {\n      return {\n        id: /\\.mjs$/.test(id) ? id : `${id}.mjs`,\n        external: true\n      };\n    }\n  },\n  load(id) {\n    if (id === CLIENT_ENTRY) {\n      return vite_client;\n    }\n    if (id === ENV_ENTRY) {\n      return vite_client_env;\n    }\n  }\n});\n\nexport default viteClientPlugin;\n","// import path from 'path';\nimport { dependencyNameRE, depBaseUrl, genPkgJson } from '$utils';\n\nconst nodeResolvePlugin = ({ tree }) => {\n  let server;\n  return {\n    name: 'vite:node:resolve',\n    enforce: 'pre',\n    configureServer(_server) {\n      server = _server;\n    },\n    resolveId(id, _, { ssr }) {\n      if (/dist\\/__require\\.js$/.test(id)) {\n        return '/dist/__require.js';\n      }\n      const dependencyInfos = dependencyNameRE.exec(id);\n\n      if (dependencyInfos) {\n        if (ssr) {\n          return {\n            id,\n            external: true\n          };\n        }\n        const { _optimizeDepsMetadata } = server;\n        if (_optimizeDepsMetadata) {\n          // 从 optimized 中查询对应依赖代码在 cdn 上的地址\n          const depData = _optimizeDepsMetadata.optimized[id];\n          if (depData?.src) {\n            return {\n              id: depData.file,\n              external: true\n            };\n          }\n\n          // // 如果在 optimized 上不存在，但又是安装过的依赖，则将其添加到 optimized，并返回对应代码文件的路径\n          // server?._registerMissingImport?.call(server, id, id, undefined);\n          // return path.join('/node_modules', dependencyInfos[1], 'index.js');\n        }\n        \n        const [, dependencyName, , pathname] = dependencyInfos;\n        const { pkgJson, parseError } = genPkgJson(tree);\n        if (!parseError) {\n          const { dependencies } = pkgJson;\n          if (!dependencies[dependencyName]) {\n            throw new Error(`${dependencyName} not implicited in package.json`);\n          }\n\n          return {\n            id: `https://esm.sh/${dependencyName}@${dependencies[dependencyName]}${pathname}`,\n            external: true\n          };\n        }\n      }\n    },\n    load(id) {\n      // 如果是动态 import，则将动态 import 的函数代码返回\n      if (id === '/dist/__require.js') {\n        if (server?._optimizeDepsMetadata) {\n          return `\n            export default function require(library) {\n              const flat = library.replace(/[\\\\/\\\\.]/g, '_');\n              return import(/*@vite-ignore*/ ${JSON.stringify(depBaseUrl)}+flat).then(m => ({...m, ...m.default}));\n            }\n        `;\n        } else {\n          console.warn('Trying to access dynamic require but dependencies aren\\'t optimized yet');\n          return `\n            export default function require(library) {\n                throw new Error('Missing library: ' + library)\n            }`;\n        }\n      }\n    }\n  };\n};\n\nexport default nodeResolvePlugin;\n","import { genSandboxConfigJson, setDomainCode, genImportMap, initDeps } from '$utils';\n\nexport function resourceIsCss(resource) {\n  // 兼容 url 带 search 的情况\n  // 例如：https://xxx/sandbox.base.css?v=0\n  const pathname = new URL(resource).pathname;\n  const match = pathname.match(/\\.([^.]*)$/);\n\n  return (match && match[1] === 'css') || resource.includes('fonts.googleapis');\n}\n\nconst htmlPlugin = ({ tree }) => ({\n  name: 'vite:html:transform',\n  transformIndexHtml: {\n    enforce: 'pre',\n    transform(html) {\n      const deps = {};\n      // 基于 package.json 的 dependencies 初始化 deps 对象\n      initDeps(tree, deps);\n\n      // 默认注入修改 domain 的 js 代码\n      const tags = [\n        {\n          tag: 'script',\n          attrs: {\n            type: 'importmap'\n          },\n          children: genImportMap(deps)\n        },\n        {\n          tag: 'script',\n          attrs: {\n            type: 'text/javascript'\n          },\n          children: setDomainCode\n        }\n      ];\n  \n      // 通过 sandbox.config.json 注入的 js 代码\n      const { sandboxConfigJson, parseError } = genSandboxConfigJson(tree);\n      if (!parseError) {\n        if (sandboxConfigJson.evaluateJavaScript) {\n          tags.push({\n            tag: 'script',\n            attrs: {\n              type: 'text/javascript'\n            },\n            children: sandboxConfigJson.evaluateJavaScript\n          });\n        }\n        \n        if (sandboxConfigJson.externalResources && Array.isArray(sandboxConfigJson.externalResources)) {\n          sandboxConfigJson.externalResources.forEach((resource) => {\n            if (resourceIsCss(resource)) {\n              tags.push({\n                tag: 'link',\n                attrs: {\n                  id: 'external-css',\n                  rel: 'stylesheet',\n                  type: 'text/css',\n                  href: resource,\n                  media: 'all'\n                }\n              });\n            } else {\n              tags.push({\n                tag: 'script',\n                attrs: {\n                  id: 'external-js',\n                  async: false,\n                  src: resource\n                }\n              });\n            }\n          });\n        }\n      }\n\n      return {\n        html,\n        tags\n      };\n    }\n  }\n});\n\nexport default htmlPlugin;\n","import {\n  // scanImports,\n  createMissingImporterRegisterFn\n} from 'vite';\nimport path from 'path';\nimport { initDeps, depBaseUrl, genSandboxConfigJson, externalDependencies } from '$utils';\n\nconst genNpmUrl = (depName, deps, tree) => {\n  const { sandboxConfigJson, parseError } = genSandboxConfigJson(tree);\n  if (!parseError && sandboxConfigJson.npmUrlMap) {\n    if (sandboxConfigJson.npmUrlMap[depName]) {\n      return sandboxConfigJson.npmUrlMap[depName];\n    }\n  }\n\n  return `${depBaseUrl}/${depName}@${deps[depName]}?bundle&dev&external=${externalDependencies.join(',')}`;\n};\n\n// eslint-disable-next-line no-unused-vars\nasync function optimizeDeps(config, tree, newDeps) {\n  const mainHash = '0';\n  const data = {\n    hash: mainHash,\n    browserHash: mainHash,\n    optimized: {}\n  };\n\n  const deps = {};\n\n  // 基于 package.json 的 dependencies 初始化 deps 对象\n  initDeps(tree, deps);\n\n  // if (newDeps) {\n  //   console.log('New dependencies: ', Object.keys(newDeps));\n  // } else {\n  //   const { missing } = await scanImports(config);\n  //   newDeps = missing;\n  //   console.log('Scanned dependencies: ', Object.keys(newDeps));\n  // }\n\n  // for (const depName of Object.keys(newDeps)) {\n  //   if (!deps[depName]) {\n  //     deps[depName] = 'latest';\n  //   }\n  // }\n\n  for (const depName of Object.keys(deps)) {\n    data.optimized[depName] = {\n      file: genNpmUrl(depName, deps, tree),\n      needsInterop: false\n    };\n  }\n\n  return data;\n}\n\n// 处理被构建应用的依赖\nasync function runOptimize(channel, server, { ref, tree }, addInitError) {\n  const sendViteServerStatus = (type, data)=> channel.publish(type, Object.assign({ ref }, data));\n  // todo: 暂时只传 server.config\n  // c = xTt(server.config, tree);\n  const config = server.config;\n  const filePath = path.join(server.config.root, 'dist/__require.js');\n\n  try {\n    server._isRunningOptimizer = true;\n    server._optimizeDepsMetadata = await optimizeDeps(config, tree);\n    server.moduleGraph.onFileChange(filePath);\n  } finally {\n    server._isRunningOptimizer = false;\n  }\n\n  server._registerMissingImport = createMissingImporterRegisterFn(\n    server, \n    (_config, _force, _asCommand, newDeps) => optimizeDeps(config, tree, newDeps)\n      .then(data => {\n        server.moduleGraph.onFileChange(filePath);\n        sendViteServerStatus('vite-server-status', {\n          status: 'successful'\n        });\n        return data;\n      }).catch(error => {\n        addInitError(error);\n        sendViteServerStatus('vite-server-status', {\n          status: 'failed'\n        });\n        return error;\n      })\n  );\n}\n\nexport default runOptimize;\n","\nimport { CLIENT_DIR } from 'vite';\nimport pluginTransformTs from '@babel/plugin-transform-typescript';\nimport { transformSync } from '@babel/core';\nimport presetReact from '@babel/preset-react';\nimport babelPresetTypescriptReact from \"@babel/preset-typescript\";\n\nexport default ({ tree, cfg }) => ({\n  name: 'vite:transform:tsx',\n  enforce: 'pre',\n  load(id) {\n    const root = cfg.root;\n    if (id.startsWith(CLIENT_DIR)) { // 去除自身依赖\n      // return id;\n    }else if(id.startsWith(root)) { // 处理文件依赖\n      if(/\\.(jsx?|tsx?)$/.test(id)){\n        const filePath = id.replace(root, '');\n        console.log(filePath, tree[filePath]);\n\n        const transformed = transformSync(tree[filePath], {\n          presets: [presetReact, [babelPresetTypescriptReact, { isTSX: true, allExtensions: true }]],\n          plugins: [[pluginTransformTs, { isTsx: true, allowNamespaces: true, loose: true }]]\n        });\n        console.log(filePath, transformed.code);\n        return transformed.code;\n      }\n    \n    }\n  }\n});\n\n","import {\n  transformRequest,\n  resolveConfig,\n  createPluginContainer,\n  createDevHtmlTransformFn,\n  ModuleGraph,\n  transformWithEsbuild,\n  ssrTransform,\n  // ssrLoadModule,\n  generateCodeFrame\n} from 'vite';\n// import reactPlugin from '@vitejs/plugin-react';\n// import pluginTransformReactJsx from '@babel/plugin-transform-react-jsx';\n\nimport viteClientPlugin from './plugins/viteClientPlugin';\nimport nodeResolvePlugin from './plugins/nodeResolvePlugin';\nimport htmlPlugin from './plugins/htmlPlugin';\nimport runOptimize from './optimize';\nimport tsxPlugin from './plugins/tsxPlugin';\nfunction Nlt(id, text) {\n  return text.replace(new RegExp(`(\\\\S+:)?/?@root/${id}`,'g'), '');\n}\n\nasync function createServer(channel, { cfg, wc, baseUrl }, addInitError) {\n  // const bablePlugins = [\n  //   pluginTransformReactJsx\n  // ];\n  const vitePlugins = [\n    // virtual plugin to provide vite client/env special entries (see below)\n    viteClientPlugin(),\n    // virtual plugin to resolve NPM dependencies, e.g. using unpkg, skypack or another provider (browser-vite only handles project files)\n    nodeResolvePlugin({\n      tree: wc.tree\n    }),\n    tsxPlugin({ // 适配tsx\n      tree: wc.tree,\n      cfg\n    }),\n    // add vite plugins you need here (e.g. vue, react, astro ...)\n    // reactPlugin({\n    //   jsxRuntime: 'classic',\n    //   babel: {\n    //     plugins: bablePlugins\n    //   }\n    // }),\n    htmlPlugin({\n      tree: wc.tree\n    })\n  ];\n\n  // 暂时只支持 react\n  const config = await resolveConfig(\n    {\n      plugins: vitePlugins,\n      base: `${baseUrl}/${wc.ref.id}/`,\n      cacheDir: 'browser',\n      root: cfg.root,\n      resolve: {\n        alias: cfg.alias\n      }\n    },\n    'serve'\n  );\n  const plugins = config.plugins;\n  const pluginContainer = await createPluginContainer(config);\n  const moduleGraph = new ModuleGraph((url, ssr) => pluginContainer.resolveId(url, undefined, {\n    ssr\n  }));\n\n  const watcher = {\n    // eslint-disable-next-line no-unused-vars\n    on(what, cb) {\n      return watcher;\n    },\n    add() {}\n  };\n  const server = {\n    config,\n    pluginContainer,\n    moduleGraph,\n    transformWithEsbuild,\n    transformRequest(url, options) {\n      return transformRequest(url, server, options);\n    },\n    ssrTransform,\n    printUrls() {},\n    transformIndexHtml: null,\n    _globImporters: {},\n    ws: {\n      send(data) {\n        const err = data.err;\n\n        if (err) {\n          data.err = Object.assign({}, err, {\n            stack: err.stack,\n            message: err.message\n          });\n        }\n        channel.publish('vite-hmr', Object.assign({}, data, { ref: wc.ref }));\n      },\n      async close() {},\n      on() {},\n      off() {}\n    },\n    middlewares: false,\n    app: undefined,\n    httpServer: undefined,\n    watcher: watcher,\n    async ssrLoadModule() {\n      // // todo: loadModule 待实现\n      // return ssrLoadModule(url, server, () => null);\n    },\n    ssrFixStacktrace() {},\n    listen: undefined,\n    async close() {},\n    async restart() {},\n    _optimizeDepsMetadata: null,\n    _isRunningOptimizer: false,\n    _pendingReload: undefined,\n    _registerMissingImport: undefined,\n    _ssrExternals: [],\n    _restartPromise: null,\n    _forceOptimizeOnRestart: false,\n    _pendingRequests: new Map()\n  };\n\n  server.transformIndexHtml = createDevHtmlTransformFn(server);\n\n  // apply server configuration hooks from plugins\n  const postHooks = [];\n  for (const plugin of plugins) {\n    if (plugin.configureServer) {\n      postHooks.push(await plugin.configureServer(server));\n    }\n  }\n\n  // run post config hooks\n  // This is applied before the html middleware so that user middleware can\n  // serve custom content instead of index.html.\n  postHooks.forEach((fn) => fn && fn());\n\n  let initError;\n  try {\n    await pluginContainer.buildStart({});\n    await runOptimize(channel, server, wc, addInitError);\n  } catch (error) {\n    initError = error,\n    initError.message = error.message.replace(/^Build failed with \\d+ error.*:/, 'Failed to start compilation server:');\n    const { location } = (error.errors == null ? undefined : error.errors[0]) || {};\n\n    if (location?.file) {\n      initError.id = `${location.file}:${location?.line || 0}:${location?.column || 0}`;\n      initError.loc = location;\n      initError.frame = generateCodeFrame(wc.tree[Nlt(wc.ref.id, location.file).slice(1)], location);\n    }\n  }\n\n  const createResolver = config.createResolver;\n  config.createResolver = option =>{\n    const resolveFn = createResolver(option);\n    return async(id, importer, aliasOnly, ssr)=>{\n      const code = await resolveFn(id, importer, aliasOnly, ssr);\n      // if (!code && !aliasOnly) {\n      //     let ret = dependencyNameRE.exec(id);\n      //     if (ret) {\n      //         let [name, version, pathname] = ret.slice(1);\n      //         let _optimizeDepsMetadata = R._optimizeDepsMetadata;\n      //         let versionedEntry = _optimizeDepsMetadata?.$pinDependency$(version ? `${name}@${version}` : name);\n      //         if (versionedEntry) {\n      //             let ce = await i4r(versionedEntry);\n      //             for (let[fe, A] of Object.entries(ce)) {\n      //                 let W = path.join(e.root, 'node_modules', name, fe);\n      //                 uN(W, A);\n      //             }\n      //             code = await resolveFn(path.join(e.root, 'node_modules', name, pathname), importer, aliasOnly, ssr)\n      //         }\n      //     }\n      // }\n      return code;\n    };\n  };\n  \n  return {\n    server,\n    initError\n  };\n}\n\nexport default createServer;\n","import {\n  transformRequest,\n  isCSSRequest,\n  isDirectCSSRequest,\n  injectQuery,\n  removeImportQuery,\n  unwrapId,\n  handleFileAddUnlink,\n  handleHMRUpdate\n} from 'vite';\nimport fs from 'fs';\nimport path from 'path';\nimport {\n  writeProjectFiles,\n  genProjectInfo,\n  sendCompileError,\n  getImageContentType,\n  findPathName,\n  genPkgJson,\n  genErrorHtmlCode,\n  enhanceErrorInfo\n} from '$utils';\nimport Channel from '$utils/channel';\nimport '$utils/initFiles/index';\nimport createServer from './server';\n\nconst compileContexts = new Map();\n\nconst { busid, wcid } = self;\n\nconst channel = new Channel(busid);\n\n// 创建编译上下文\nasync function createCompileContext(projectInfo, wc, parseError) {\n  channel.publish('vite-server-status', {\n    ref: wc.ref,\n    status: 'initializing'\n  });\n\n  // eslint-disable-next-line prefer-const\n  let compileContext;\n\n  const { server, initError } = await createServer(channel, {\n    cfg: projectInfo,\n    wc,\n    baseUrl: `/${channel.channelName}/vite`\n  }, err => compileContext.initError = err);\n\n  compileContext = {\n    cfg: projectInfo,\n    wc,\n    server,\n    initError: parseError ? parseError : initError\n  };\n\n  return compileContext;\n}\n\n// 根据消息决定初始化编译上下文\nchannel.subscribe('tree-compilation-request', async (data) => {\n  const { compiler_type, tree } = data;\n\n  if (compiler_type === 'vite') {\n    const { pkgJson, parseError } = genPkgJson(tree);\n    const compileContext = compileContexts.get(wcid);\n    let isFileUpdate = compileContext && !compileContext.initError;\n    const projectInfo = await genProjectInfo(tree, pkgJson, wcid);\n\n    // 向内存文件系统写入需要构建应用的源码\n    writeProjectFiles(projectInfo.root, tree);\n\n    if (isFileUpdate) {\n      const { wc } = compileContext;\n\n      if (parseError) {\n        compileContext.initError = parseError;\n      }\n\n      // 只要项目信息（例如依赖或 tsconfig/jsconfig 等文件内容）不变，则尝试热更新处理\n      // 文件变动后（新增/删除/文案内容变动）的热更新处理\n      if (JSON.stringify(projectInfo) === JSON.stringify(compileContext.cfg)) {\n        const { server } = compileContext;\n        const { root } = server.config;\n        for (const filePath in wc.tree) {\n          // 1. 文件内容变更情况\n          if (filePath in tree) {\n            if (tree[filePath] !== wc.tree[filePath]) {\n              server.moduleGraph.onFileChange(path.join(root, filePath));\n              try {\n                await handleHMRUpdate(path.join(root, filePath), tree[filePath], server);\n              } catch(err) {\n                server.ws.send({\n                  type: 'error',\n                  err\n                });\n              }\n            }\n          } else {\n            // 2. 删除文件情况\n            handleFileAddUnlink(path.join(root, filePath), server, true);\n            delete wc.tree[filePath];\n          }\n        }\n\n        for (const filePath in tree) {\n          // 3. 新增文件情况\n          if (!(filePath in wc.tree)) {\n            handleFileAddUnlink(path.join(root, filePath), server, false);\n            server.ws.send({\n              type: 'full-reload',\n              path: filePath\n            });\n            wc.tree[filePath] = tree[filePath];\n          }\n        }\n      } else {\n        compileContext.server.close();\n        isFileUpdate = false;\n      }\n    }\n\n    if (!isFileUpdate) {\n      try {\n        const compileContext = await createCompileContext(projectInfo, {\n          tree,\n          ref: {\n            id: wcid\n          }\n        }, parseError);\n        compileContexts.set(wcid, compileContext);\n        compileContext.server.ws.send({\n          type: 'full-reload'\n        });\n        // 完成 compileContext 上下文初始化\n        self.postMessage({\n          cmd: 'compile-context-inited'\n        });\n      } catch (err) {\n        sendCompileError(channel, err, wcid);\n        channel.publish('tree-compile-failure', {\n          wcid\n        });\n        return;\n      }\n    }\n\n    channel.publish('tree-compile-success', {\n      wcid,\n      imports: [],\n      tree: {}\n    });\n  }\n});\n\n// 重新创建编译上下文\nchannel.subscribe('vite-reload-request', async({ reqId, wcid }) => {\n  const compileContext = compileContexts.get(wcid);\n  if (compileContext) {\n    compileContexts.delete(compileContext);\n    compileContext.server.close();\n\n    const { wc } = compileContext;\n    try {\n      const { pkgJson, parseError } = genPkgJson(wc.tree);\n      const projectInfo = await genProjectInfo(wc.tree, pkgJson, wcid);\n      const compileContext = await createCompileContext(projectInfo, wc, parseError);\n      compileContexts.set(wcid, compileContext);\n    } catch (err) {\n      sendCompileError(channel, err, wcid);\n    }\n  }\n\n  channel.publish('vite-reload-response', {\n    reqId,\n    result: {}\n  });\n});\n\n// 根据 service worker 捕获的请求编译对应代码并返回\nchannel.subscribe('serve-request', async({ reqId, pathname, rawUrl, accept }) => {\n  // 当 path 以 / 结尾时，则均指向 index.html\n  if (pathname.endsWith('/')) {\n    pathname = '/index.html';\n    accept = 'text/html';\n  }\n\n  // test\n  if (pathname.endsWith('/d2c') || pathname.endsWith('/user/:userId')) {\n    pathname = '/index.html';\n    accept = 'text/html';\n  }\n\n  let result = {};\n\n  try {\n    const compileContext = compileContexts.get(wcid);\n    if (!compileContext) {\n      throw new Error('Vite server not yet started');\n    }\n    const { server, wc, initError } = compileContext;\n    const html = accept?.includes('text/html');\n    let code;\n\n    // strip ?import\n    pathname = removeImportQuery(pathname);\n    // Strip valid id prefix. This is prepended to resolved Ids that are\n    // not valid browser import specifiers by the importAnalysis plugin.\n    pathname = unwrapId(pathname);\n    // for CSS, we need to differentiate between normal CSS requests and\n    // imports\n    if (isCSSRequest(pathname) && accept?.includes('text/css')) {\n      pathname = injectQuery(pathname, 'direct');\n    }\n\n    let contentType;\n\n    if (isDirectCSSRequest(pathname)) {\n      contentType = 'text/css';\n    } else if (html) {\n      contentType = 'text/html';\n    } else if (accept?.includes('image/')) {\n      contentType = getImageContentType(pathname);\n    } else {\n      contentType = 'application/javascript';\n    }\n\n    if (initError && pathname !== '/@vite/client') {\n      code = genErrorHtmlCode(channel, contentType, initError, wcid);\n    } else {\n      let path = pathname;\n      try {\n        if (html) {\n          // 从被构建的前端应用源码中查找对应文件，如果存在则编译该文件\n          path = findPathName(path, Object.keys(wc.tree));\n          if (path) {\n            code = await server.transformIndexHtml(path, wc.tree[path]);\n          } else if (pathname.startsWith('/@virtual/')) {\n            code = await server.transformIndexHtml(pathname, '');\n          }\n        } else if (contentType.startsWith('image/')) {\n          const ret = fs.readFileSync(`${compileContext.cfg.root}${path}`, 'utf8');\n          code = ret.buffer || ret;\n        } else {\n          // transformRequest 从 vite 中获取\n          const ret = await transformRequest(pathname, server, { html });\n          code = ret?.code; \n        }\n      } catch (err) {\n        enhanceErrorInfo(err, wc.tree, path, pathname),\n        server.ws.send({\n          type: 'error',\n          err\n        });\n        if (contentType !== 'text/css') {\n          code = genErrorHtmlCode(channel, contentType, err, wcid);\n        }\n      }\n    }\n\n    if (code) {\n      const viteCache = await caches.open('vite');\n      await viteCache.put(new Request(rawUrl), new Response(code, {\n        headers: { \n          'Content-Type': contentType\n        }\n      }));\n\n      result = {\n        cache: true,\n        url: pathname\n      };\n    } else {\n      result = {\n        notfound: true,\n        url: pathname\n      };\n    }\n  } catch (error) {\n    console.log(error);\n    result = {\n      error: error.message,\n      url: pathname\n    };\n  }\n\n  channel.publish('serve-response', {\n    reqId,\n    result\n  });\n});\n","class Channel {\n  constructor(channelName) {\n    this.channelName = channelName;\n    this.listeners = new Map();\n    this.broadcastChannel = new BroadcastChannel(channelName);\n    this.broadcastChannel.addEventListener('message', this.onEvent.bind(this));\n  }\n\n  subscribe(type, callback) {\n    let callbacks = this.listeners.get(type);\n\n    if (!callbacks) {\n      callbacks = new Set();\n      this.listeners.set(type, callbacks);\n    }\n\n    callbacks.add(callback);\n\n    return () => {\n      const callbacks = this.listeners.get(type);\n      if (callbacks) {\n        callbacks.delete(callback);\n      }\n    };\n  }\n\n  request(originType = 'serve-request', data) {\n    const reqId = Date.now().toString(36);\n    const type = originType.toString().replace('request', 'response');\n\n    return new Promise(resolve => {\n      const clear = this.subscribe(type, response => {\n        if (response.reqId === reqId) {\n          clear();\n          delete response.reqId;\n          resolve(response.result);\n        }\n      });\n\n      this.publish(originType, { ...data, reqId });\n    });\n  }\n\n  publish(type, data) {\n    this.broadcastChannel.postMessage({\n      type,\n      data\n    });\n  }\n\n  onEvent(event) {\n    this.notifyListeners(event.data.type, event.data.data);\n  }\n\n  notifyListeners(type, data) {\n    const callbacks = this.listeners.get(type);\n    if (callbacks) {\n      callbacks.forEach(callback=>{\n        try {\n          callback(data);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n  }\n}\n\nexport default Channel;\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","initializePromise","initialize","worker","Worker","wasmURL","transform","r","then","formatMessages","promises","fs","builtinModules","createRequire","performance","now","Date","getTime","URL","globalThis","URLSearchParams","pathToFileURL","path","fileURLToPath","url","protocol","pathname","packageJsonPath","sandboxConfigJsonPath","depBaseUrl","dependencyNameRE","configFileNames","externalDependencies","genImportMap","deps","importMap","imports","depName","version","join","JSON","stringify","writeFileSync","_path","contents","recursive","error","console","log","genSandboxConfigJson","tree","sandboxConfigJson","parse","message","parseError","genPkgJson","pkgJson","initDeps","dependencies","entries","forEach","name","ver","genProjectInfo","wcid","devDependencies","peerDependencies","isSomeFrameWork","useReact","useSolid","useVue","useSvelte","useStencil","root","configFiles","fromEntries","configFileName","sendCompileError","channel","err","Array","isArray","publish","errors","stack","filename","lineno","start","line","colno","column","_findPathName","pathNameArr","i","RegExp","find","p","test","genErrorHtmlCode","contentType","channelName","server","enforce","configureServer","_server","resolveId","_","ssr","dependencyInfos","exec","external","_optimizeDepsMetadata","depData","optimized","src","file","dependencyName","load","warn","transformIndexHtml","html","tags","tag","attrs","type","children","evaluateJavaScript","push","externalResources","resource","match","includes","resourceIsCss","async","rel","href","media","genNpmUrl","npmUrlMap","optimizeDeps","config","newDeps","data","hash","browserHash","needsInterop","cfg","startsWith","filePath","replace","transformed","transformSync","presets","isTSX","allExtensions","plugins","isTsx","allowNamespaces","loose","wc","baseUrl","addInitError","vitePlugins","tsxPlugin","base","ref","cacheDir","alias","pluginContainer","moduleGraph","undefined","watcher","on","what","cb","add","transformWithEsbuild","transformRequest","options","ssrTransform","printUrls","_globImporters","ws","send","assign","off","middlewares","app","httpServer","ssrFixStacktrace","listen","_isRunningOptimizer","_pendingReload","_registerMissingImport","_ssrExternals","_restartPromise","_forceOptimizeOnRestart","_pendingRequests","Map","postHooks","plugin","initError","fn","buildStart","sendViteServerStatus","onFileChange","_config","_force","_asCommand","status","catch","location","loc","frame","text","slice","createResolver","option","resolveFn","importer","aliasOnly","compileContexts","busid","self","constructor","this","listeners","broadcastChannel","BroadcastChannel","addEventListener","onEvent","bind","subscribe","callback","callbacks","get","Set","set","delete","request","originType","reqId","toString","Promise","clear","response","result","postMessage","event","notifyListeners","createCompileContext","projectInfo","compileContext","compiler_type","isFileUpdate","writeProjectFiles","close","cmd","rawUrl","accept","endsWith","extname","getImageContentType","findPathName","ret","buffer","source","dependency","enhanceErrorInfo","viteCache","caches","open","put","Request","Response","headers","cache","notfound"],"sourceRoot":""}